# Generated by Django 4.0.2 on 2022-09-24 08:32

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'Employee'), (3, 'Instructor'), (4, 'members'), (5, 'Training')], default=1, max_length=10)),
                ('adhaar', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_pic', models.ImageField(upload_to='media/profile_pic')),
                ('pan_no', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'center',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_img', models.ImageField(upload_to='course_pic')),
                ('course_name', models.CharField(max_length=100)),
                ('course_amt', models.IntegerField()),
                ('company_name', models.CharField(max_length=100)),
                ('course_location', models.CharField(max_length=100)),
                ('course_des', ckeditor.fields.RichTextField()),
                ('course_skill', ckeditor.fields.RichTextField()),
                ('course_experience', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_img', models.ImageField(upload_to='Jobs_Img')),
                ('job_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('job_location', models.CharField(max_length=100)),
                ('min_sallery', models.IntegerField()),
                ('max_sallery', models.IntegerField()),
                ('Vacancy', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
                ('job_des', ckeditor.fields.RichTextField()),
                ('job_skill', ckeditor.fields.RichTextField()),
                ('job_experience', ckeditor.fields.RichTextField()),
                ('salary', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='outer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mob', models.CharField(max_length=50)),
                ('services', models.CharField(max_length=50)),
                ('no_of_worker', models.CharField(max_length=100)),
                ('gender_preference', models.CharField(max_length=100)),
                ('work_start_Date', models.CharField(blank=True, max_length=100, null=True)),
                ('landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('pin_code', models.IntegerField(blank=True, null=True)),
                ('specific_requirements', models.CharField(blank=True, max_length=100, null=True)),
                ('sallery_offerd', models.IntegerField(blank=True, null=True)),
                ('goverment', models.CharField(max_length=100)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('min_sal', models.PositiveIntegerField()),
                ('max_sal', models.PositiveIntegerField()),
                ('gov_approved', models.PositiveIntegerField()),
                ('margin', models.PositiveIntegerField()),
                ('is_employer', models.BooleanField(default=False)),
                ('is_worker', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('mobile_no', models.CharField(max_length=50)),
                ('dob', models.DateField(blank=True, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=50, null=True)),
                ('caste', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pin', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null='True')),
                ('paid', models.BooleanField(default=False)),
                ('payment_id', models.CharField(max_length=70)),
                ('amount', models.CharField(max_length=70)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.role')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('father_name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('mobile_no', models.CharField(max_length=50)),
                ('dob', models.DateField(blank=True, null=True)),
                ('adhaar', models.CharField(blank=True, max_length=50, null=True)),
                ('pan_no', models.CharField(blank=True, max_length=50, null=True)),
                ('caste', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pin', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null='True')),
                ('paid', models.BooleanField(default=False)),
                ('payment_id', models.CharField(max_length=70)),
                ('amount', models.CharField(max_length=70)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('job_seeker', models.CharField(blank=True, max_length=50, null=True)),
                ('adhar_front', models.ImageField(blank=True, null=True, upload_to='worker/')),
                ('adhar_back', models.ImageField(blank=True, null=True, upload_to='worker/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.role')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('center_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.center')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mob_no', models.IntegerField(blank=True, null=True)),
                ('emp_city', models.CharField(max_length=100)),
                ('emp_state', models.CharField(max_length=100)),
                ('emp_pin_code', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField()),
                ('pan_Card', models.ImageField(blank=True, null=True, upload_to='pancard/')),
                ('section', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_id', models.CharField(blank=True, max_length=70, null=True)),
                ('paid', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(default=0)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_worker', models.CharField(max_length=100)),
                ('gender_preference', models.CharField(max_length=100)),
                ('work_start_Date', models.DateField(blank=True, null=True)),
                ('landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('pin_code', models.IntegerField(blank=True, null=True)),
                ('specific_requirements', models.CharField(blank=True, max_length=100, null=True)),
                ('sallery_offerd', models.IntegerField(blank=True, null=True)),
                ('goverment', models.CharField(max_length=100)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('employer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employer')),
                ('services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.role')),
            ],
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
